{
	"openapi": "3.0.1",
	"info": {
	  "title": "PowerShell Universal Management API",
	  "description": "The PowerShell Universal Management API is used for managing the platform itself.",
	  "version": "v1"
	},
	"paths": {
	  "/api/v1/alive": {
		"get": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Returns 200 if the system is alive.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/accessible": {
		"get": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Returns ok if the user has access to the PSU server.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/first-run": {
		"post": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Sets first run settings.",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FirstRunModel"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FirstRunModel"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FirstRunModel"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FirstRunModel"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/status": {
		"get": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Status of the server.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"head": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Status of the server.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/favicon": {
		"get": {
		  "tags": [
			"Alive"
		  ],
		  "summary": "Status of the server.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/apptoken": {
		"post": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Creates a new app token.",
		  "requestBody": {
			"description": "The app token to create.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Updates an app token.",
		  "requestBody": {
			"description": "The app token to update.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Gets all app tokens.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/apptoken/grant": {
		"get": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Gets or grants an app token for an identity",
		  "parameters": [
			{
			  "name": "lifespanDays",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32",
				"default": 365
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Grants an app token with the specified criteria.",
		  "requestBody": {
			"description": "The token to grant",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/apptoken/grant/{id}": {
		"get": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Gets or grants an app token for an identity",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The identity ID",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "lifespanDays",
			  "in": "query",
			  "description": "The number of days that this app token is valid for.",
			  "schema": {
				"type": "integer",
				"format": "int32",
				"default": 365
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/apptoken/{id}": {
		"get": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Gets an app token by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"AppToken"
		  ],
		  "summary": "Revokes an access token.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/signin/{method}": {
		"get": {
		  "tags": [
			"Authentication"
		  ],
		  "parameters": [
			{
			  "name": "method",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "returnUrl",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/signin/form": {
		"post": {
		  "tags": [
			"Authentication"
		  ],
		  "summary": "Sign in using the specified credential.",
		  "parameters": [
			{
			  "name": "returnUrl",
			  "in": "query",
			  "description": "The return URL after login.",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "multipart/form-data": {
				"schema": {
				  "type": "object",
				  "properties": {
					"UserName": {
					  "type": "string"
					},
					"Password": {
					  "type": "string"
					}
				  }
				},
				"encoding": {
				  "UserName": {
					"style": "form"
				  },
				  "Password": {
					"style": "form"
				  }
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/signin": {
		"post": {
		  "tags": [
			"Authentication"
		  ],
		  "summary": "Sign in using the specified credential.",
		  "requestBody": {
			"description": "The credential for sign in.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Credential"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Credential"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Credential"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Credential"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/signout": {
		"get": {
		  "tags": [
			"Authentication"
		  ],
		  "summary": "Sign out",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/authmethod": {
		"get": {
		  "tags": [
			"Authentication"
		  ],
		  "summary": "Returns the auth method used to login.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "string"
				  }
				},
				"application/json": {
				  "schema": {
					"type": "string"
				  }
				},
				"text/json": {
				  "schema": {
					"type": "string"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/cache": {
		"post": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Adds an item to the cache.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.CacheItem"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.CacheItem"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.CacheItem"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.CacheItem"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/cache/{key}": {
		"get": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Returns the item cached with the key specified.",
		  "parameters": [
			{
			  "name": "key",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Removes a key from the cache.",
		  "parameters": [
			{
			  "name": "key",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/cache/{key}/value": {
		"get": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Returns the value of item cached with the key specified.",
		  "parameters": [
			{
			  "name": "key",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/cache/key": {
		"get": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Returns all the keys in the cache.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/cache/claims": {
		"delete": {
		  "tags": [
			"Cache"
		  ],
		  "summary": "Removes all cached claims.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/component/{id}/sync": {
		"put": {
		  "tags": [
			"Component"
		  ],
		  "summary": "Syncs a PowerShell Universal UI component.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the element to sync.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "broadcast",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/computer/{id}": {
		"get": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Gets a computer by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the computer to return.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				}
			  }
			},
			"404": {
			  "description": "Not Found"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Deletes a computer.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the computer to delete.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			},
			"404": {
			  "description": "Not Found"
			}
		  }
		}
	  },
	  "/api/v1/computer": {
		"get": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Returns all computers.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Updates a computer.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "query",
			  "description": "The ID of the computer to update.",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Id",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Name",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "HeartBeat",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.ComputerStatus"
			  }
			},
			{
			  "name": "GrpcPort",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "LoadingInfo",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Maintenance",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Deleted",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "LoginErrorMessage",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Tags",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ComputerTag"
				}
			  }
			},
			{
			  "name": "HangfireServerId",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "HangfireWorkerCounter",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Version",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "FileSyncTimestamp",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "ReadOnly",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "DeploymentVersion",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "DeploymentName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "DataItems",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DataItem"
				}
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			},
			"404": {
			  "description": "Not Found"
			}
		  }
		},
		"post": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Creates a new computer.",
		  "parameters": [
			{
			  "name": "Id",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Name",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "HeartBeat",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.ComputerStatus"
			  }
			},
			{
			  "name": "GrpcPort",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "LoadingInfo",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Maintenance",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Deleted",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "LoginErrorMessage",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Tags",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ComputerTag"
				}
			  }
			},
			{
			  "name": "HangfireServerId",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "HangfireWorkerCounter",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Version",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "FileSyncTimestamp",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "ReadOnly",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "DeploymentVersion",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "DeploymentName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "DataItems",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DataItem"
				}
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Computer"
				  }
				}
			  }
			},
			"409": {
			  "description": "Conflict"
			}
		  }
		}
	  },
	  "/api/v1/computer/queue": {
		"get": {
		  "tags": [
			"Computer"
		  ],
		  "summary": "Returns queues and computer groups.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration": {
		"post": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Reloads configuration",
		  "parameters": [
			{
			  "name": "reset",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Returns a list of the configuration files.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "type": "string"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/configuration/sync/{configurationFile}": {
		"put": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Returns a list of the configuration files.",
		  "parameters": [
			{
			  "name": "configurationFile",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/{configurationFile}": {
		"get": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Returns the content of the specified configuration file.",
		  "parameters": [
			{
			  "name": "configurationFile",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "string"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Updates the content of the specified configuration file.",
		  "parameters": [
			{
			  "name": "configurationFile",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/list/{path}": {
		"get": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Lists files and folders within a path.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/content/{path}": {
		"put": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Updates a file's content.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Gets a file's content.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/item": {
		"post": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Creates a new file system item.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/item/{path}": {
		"delete": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Delets a file system item.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/status/{type}": {
		"get": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Gets the current status of the configuration system.",
		  "parameters": [
			{
			  "name": "type",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/configuration/filewatcher": {
		"put": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Resumes the file system watcher.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Configuration"
		  ],
		  "summary": "Pauses the file system watcher.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard": {
		"post": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Creates and attempts to start a dashboard.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns dashboards.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{dashboardId}/page": {
		"post": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Creates a dashboard page.",
		  "parameters": [
			{
			  "name": "dashboardId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns dashboards pages.",
		  "parameters": [
			{
			  "name": "dashboardId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/terminal/{sessionId}/{pageId}": {
		"post": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Issues a command against a dashboard.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "sessionId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "pageId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.TerminalCommand"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.TerminalCommand"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.TerminalCommand"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.TerminalCommand"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}": {
		"put": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Updates a dashboard.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Deletes a dashboard",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns a dashboard",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{dashboardId}/page/{id}": {
		"put": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Updates a dashboard page.",
		  "parameters": [
			{
			  "name": "dashboardId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Deletes a dashboard page",
		  "parameters": [
			{
			  "name": "dashboardId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns a dashboard page.",
		  "parameters": [
			{
			  "name": "dashboardId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/content": {
		"put": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Updates a dashboard content.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.UDDashboard"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.UDDashboard"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.UDDashboard"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.UDDashboard"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns dashboard content.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/status": {
		"put": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Starts a dashboard",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Stops a dashboard.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/status/restart": {
		"put": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Restart a dashboard",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/diagnostics": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns the diagnostics for all dashboards.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/diagnostics/sessions": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns the total sessions for all dashboards.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/diagnostics/endpoints": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns the total endpoints for all dashboards.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/diagnostics/memory": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns the total memory for all dashboards.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/diagnostics": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns the diagnostics for a dashboard.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/tag/{tag}": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Returns dashboards by tag.",
		  "parameters": [
			{
			  "name": "tag",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/{id}/theme": {
		"post": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Creates or updates a new theme",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Theme"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Theme"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Theme"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Theme"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/dashboard/theme/{name}": {
		"get": {
		  "tags": [
			"Dashboard"
		  ],
		  "summary": "Gets a theme from the asset manager.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/debugger/breakpoint": {
		"get": {
		  "tags": [
			"Debugger"
		  ],
		  "summary": "Returns all currently waiting breakpoints.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/deployment": {
		"post": {
		  "tags": [
			"DeploymentService"
		  ],
		  "parameters": [
			{
			  "name": "Id",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Version",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Description",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Date",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "Storage",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.DeploymentStorage"
			  }
			},
			{
			  "name": "Pinned",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Name",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Repository",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.DeploymentContent"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.DeploymentContent"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.DeploymentContent"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"DeploymentService"
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Deployment"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Deployment"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Deployment"
				  }
				}
			  }
			}
		  }
		},
		"get": {
		  "tags": [
			"DeploymentService"
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Deployment"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Deployment"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Deployment"
					}
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"DeploymentService"
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/deployment/{name}/{version}": {
		"put": {
		  "tags": [
			"DeploymentService"
		  ],
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "version",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "pin",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/deployment/{module}/{version}": {
		"put": {
		  "tags": [
			"DeploymentService"
		  ],
		  "parameters": [
			{
			  "name": "module",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "version",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/deployment/{id}": {
		"delete": {
		  "tags": [
			"DeploymentService"
		  ],
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/diagnostics/processes": {
		"get": {
		  "tags": [
			"Diagnostics"
		  ],
		  "summary": "Returns processes running under PowerShell Universal.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/diagnostics/processes/{id}/runspaces": {
		"get": {
		  "tags": [
			"Diagnostics"
		  ],
		  "summary": "Returns PowerShell runspaces in a process.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/diagnostics/processes/{id}/assembly": {
		"get": {
		  "tags": [
			"Diagnostics"
		  ],
		  "summary": "Returns assemblies loaded into a process.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint/{id}": {
		"get": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Returns an endpoint by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Updates an endpoint.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Deletes an endpoint.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint/{id}/parts": {
		"get": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Returns the parts for a endpoint by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint": {
		"get": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Returns all endpoints.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Creates a new endpoint.",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint/restart": {
		"post": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Restarts the API service.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint/doc/{id}": {
		"get": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Returns a endpoint documentation by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Updates an endpoint documentation.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Deletes an endpoint documentation.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/endpoint/doc": {
		"get": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Returns all endpoint documentation.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"Endpoint"
		  ],
		  "summary": "Creates a new endpoint documentation.",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/eventHub": {
		"post": {
		  "tags": [
			"EventHubService"
		  ],
		  "summary": "Add new Event Hub",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"EventHubService"
		  ],
		  "summary": "Deletes an event hub.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"EventHubService"
		  ],
		  "summary": "Updates an event hub.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				}
			  }
			}
		  }
		},
		"get": {
		  "tags": [
			"EventHubService"
		  ],
		  "summary": "Gets all event hubs.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.EventHub"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/eventHub/{id}": {
		"get": {
		  "tags": [
			"EventHubService"
		  ],
		  "summary": "Gets an event hub by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.EventHub"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/environment": {
		"get": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Returns all the registered execution environments.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Creates a new execution environment.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Updates an existing execution environment.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/environment/{id}": {
		"get": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Returns a registered execution environment based on ID",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Deletes an execution environment based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/environment/{name}/restart": {
		"put": {
		  "tags": [
			"ExecutionEnvironment"
		  ],
		  "summary": "Restarts resources based on the execution environment name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/folder": {
		"post": {
		  "tags": [
			"Folder"
		  ],
		  "summary": "Creates a new folder. If no parent folder is specified, the folder will be created at the root. The folder will be created within the git repo and sync'd to the database.",
		  "requestBody": {
			"description": "The folder to create.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Folder"
		  ],
		  "summary": "Returns all folders.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/folder/{id}": {
		"get": {
		  "tags": [
			"Folder"
		  ],
		  "summary": "Returns a folder based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Folder"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Folder"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Folder"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/folder/path/{path}": {
		"get": {
		  "tags": [
			"Folder"
		  ],
		  "summary": "Returns a folder based on path.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/folder/contents/{path}": {
		"get": {
		  "tags": [
			"Folder"
		  ],
		  "summary": "Gets scripts in the specified folder.",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "The ID of the folder.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/git/settings": {
		"post": {
		  "tags": [
			"Git"
		  ],
		  "summary": "Creates or updates the git settings.",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				}
			  }
			}
		  }
		},
		"get": {
		  "tags": [
			"Git"
		  ],
		  "summary": "Returns a collection of the git sync statuses.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.GitSettings"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Git"
		  ],
		  "summary": "Delete git settings",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/git/sync": {
		"get": {
		  "tags": [
			"Git"
		  ],
		  "summary": "Forces a git sync",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns a collection of the git sync statuses.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.GitStatus"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.GitStatus"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.GitStatus"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/status": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Gets the current node's repository status.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/git/commit": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns a list of git commits.",
		  "parameters": [
			{
			  "name": "skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32",
				"default": 0
			  }
			},
			{
			  "name": "take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32",
				"default": 10
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/sha/{sha}": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns the changes for the specified git commit.",
		  "parameters": [
			{
			  "name": "sha",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/diff/{sha}/{path}": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns a diff of the file between the specified commits.",
		  "parameters": [
			{
			  "name": "sha",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/diff/uncommitted/{path}": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns a diff of the file that is currently being edited",
		  "parameters": [
			{
			  "name": "path",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/setting": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns settings for the git sync.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/edit": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns whether an edit is in progress.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Starts editing PowerShell Universal. Git sync must be in manual edit mode.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Cancels editing PowerShell Universal.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Commits a git commit that has not been pushed.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/discard": {
		"put": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Discards a git commit that has not been pushed.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.GitCommit"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/edit/changes": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns changes that have not been committed.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/gitstatus/edit/changes/any": {
		"get": {
		  "tags": [
			"GitStatus"
		  ],
		  "summary": "Returns whether there are any changes that have not been committed.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/health": {
		"get": {
		  "tags": [
			"HealthCheck"
		  ],
		  "summary": "Returns a collection of the health checks.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"HealthCheck"
		  ],
		  "summary": "Rechecks the health checks.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"HealthCheck"
		  ],
		  "summary": "Deletes all health checks.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/health/status": {
		"get": {
		  "tags": [
			"HealthCheck"
		  ],
		  "summary": "Returns the current status of the health checks.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/identity/{id}": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns an identity based on the ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the identity.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Deletes a Identity based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/identity/{name}": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns an identity based on the name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "The name of the identity.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/my": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns a user's identity.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Updates the current identity",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/identity": {
		"post": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Creates a new identity",
		  "requestBody": {
			"description": "Identity to create.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Identity"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Updates an identity",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns all identities.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/password": {
		"put": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Updates an identity",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/identity/{id}/apptoken": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns all the app tokens assigned to an identity.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/{id}/job": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns the jobs executed by the identity.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/UniversalAutomation.ViewModels.JobPagedViewModel"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/UniversalAutomation.ViewModels.JobPagedViewModel"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/UniversalAutomation.ViewModels.JobPagedViewModel"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/{id}/script": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns all the scripts modified or created by the identity.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/{id}/schedule": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns all the schedules modified or created by the identity.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/identity/claims": {
		"get": {
		  "tags": [
			"Identity"
		  ],
		  "summary": "Returns the current user's claims.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Returns a job based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Cancels a running job based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Returns a job based on ID.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Cancels a running job based on ID.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/child": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Returns the child jobs of the parent ID",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/child": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Returns the child jobs of the parent run ID",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Returns a job based on Status.",
		  "parameters": [
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/archive/{id}": {
		"delete": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Archive job based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/archive/{runId}": {
		"delete": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Archive job based on run ID.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Job"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/archive": {
		"delete": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Archive all jobs based on completed or failed.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/output": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "skip",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/output": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job by run ID.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			},
			{
			  "name": "skip",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/logfile": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job as a text file.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/logfile": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job as a text file.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/log": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "timezone",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "format",
			  "in": "query",
			  "description": "console or json",
			  "schema": {
				"type": "string",
				"default": "console"
			  }
			},
			{
			  "name": "stream",
			  "in": "query",
			  "description": "Whether to include the stream information.",
			  "schema": {
				"type": "boolean",
				"default": true
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/log": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the output for the specified job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			},
			{
			  "name": "timezone",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "format",
			  "in": "query",
			  "description": "console or json",
			  "schema": {
				"type": "string",
				"default": "console"
			  }
			},
			{
			  "name": "stream",
			  "in": "query",
			  "description": "Whether to include the stream information.",
			  "schema": {
				"type": "boolean",
				"default": true
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/pipelineOutput": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the pipeline output for the specified job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/pipelineOutput": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the pipeline output for the specified job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/feedback": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets all the feedback for the specified job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/feedback": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets all the feedback for the specified job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/feedback/incomplete": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets incomplete feedback.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/feedback/incomplete": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets incomplete feedback.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{jobId}/file/{id}": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the contents of a file that was passed to a job.",
		  "parameters": [
			{
			  "name": "jobId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/file/{id}": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets the contents of a file that was passed to a job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/parameter": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets all the parameters for the specified job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/parameter": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Gets all the parameters for the specified job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{id}/error": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Get errors from the job.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/schedule/{id}": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Get jobs from a schedule",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The schedule ID",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/job/{runId}/error": {
		"get": {
		  "tags": [
			"Job"
		  ],
		  "summary": "Get errors from the job.",
		  "parameters": [
			{
			  "name": "runId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/jobfeedback": {
		"put": {
		  "tags": [
			"JobFeedback"
		  ],
		  "summary": "Updates feedback for a particular job.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobFeedback"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobFeedback"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobFeedback"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobFeedback"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/jobfeedback/{id}": {
		"get": {
		  "tags": [
			"JobFeedback"
		  ],
		  "summary": "Gets job feedback by id",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/license/developer/{id}": {
		"get": {
		  "tags": [
			"License"
		  ],
		  "summary": "Returns a developer licenses",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/license": {
		"get": {
		  "tags": [
			"License"
		  ],
		  "summary": "Returns licenses",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.License"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.License"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.License"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"License"
		  ],
		  "summary": "Adds a new license.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.License"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.License"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.License"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.License"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/license/{id}": {
		"delete": {
		  "tags": [
			"License"
		  ],
		  "summary": "Deletes a license",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/license/feature": {
		"get": {
		  "tags": [
			"License"
		  ],
		  "summary": "Returns which features are licensed.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/UniversalAutomation.Common.Interfaces.Feature"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/UniversalAutomation.Common.Interfaces.Feature"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/UniversalAutomation.Common.Interfaces.Feature"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/license/status": {
		"get": {
		  "tags": [
			"License"
		  ],
		  "summary": "Returns whether this instance is licensed.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "boolean"
				  }
				},
				"application/json": {
				  "schema": {
					"type": "boolean"
				  }
				},
				"text/json": {
				  "schema": {
					"type": "boolean"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/license/upload": {
		"post": {
		  "tags": [
			"License"
		  ],
		  "summary": "Upload to a new license.",
		  "requestBody": {
			"content": {
			  "multipart/form-data": {
				"schema": {
				  "type": "object",
				  "properties": {
					"files": {
					  "type": "array",
					  "items": {
						"type": "string",
						"format": "binary"
					  }
					}
				  }
				},
				"encoding": {
				  "files": {
					"style": "form"
				  }
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/log": {
		"get": {
		  "tags": [
			"Log"
		  ],
		  "summary": "Returns system logs are a ZIP file.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/log/{file}": {
		"get": {
		  "tags": [
			"Log"
		  ],
		  "summary": "Returns a single log file.",
		  "parameters": [
			{
			  "name": "file",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/logging/target": {
		"get": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Returns logging targets.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Creates a new logging target.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Updates a logging target.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.LoggingTarget"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/logging/target/{id}": {
		"delete": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Deletes a logging target.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/logging/log": {
		"get": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Returns log entries.",
		  "parameters": [
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogEntry"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Level",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Scope",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Feature",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Resource",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Message",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "NodeName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Start",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "End",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Truncates log entries.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/logging/log/file": {
		"get": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Returns log file as text/plain.",
		  "parameters": [
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogEntry"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Level",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Scope",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Feature",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Resource",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Message",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "NodeName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Start",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			},
			{
			  "name": "End",
			  "in": "query",
			  "schema": {
				"type": "string",
				"format": "date-time"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/logging/log/export": {
		"post": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Creates a new log export request.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogExportParameters"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogExportParameters"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogExportParameters"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.LogExportParameters"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Returns log export requests.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/logging/log/export/{id}": {
		"get": {
		  "tags": [
			"Logging"
		  ],
		  "summary": "Downloads a log export.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/module": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns a list of all modules.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Reload modules",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Creates a new custom module.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/module/{environment}": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns modules for the specified environment.",
		  "parameters": [
			{
			  "name": "environment",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/{module}/command": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns commands within a module.",
		  "parameters": [
			{
			  "name": "module",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/command/{feature}": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns features for a module.",
		  "parameters": [
			{
			  "name": "feature",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/{id}": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns a module by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Updates a custom module.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Module"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Deletes a custom module.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/module/repository": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Gets a list of module repositories.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/module/psu": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Returns PowerShell Universal extension modules.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/psu/find/{text}": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Searches for a PowerShell Universal extension module.",
		  "parameters": [
			{
			  "name": "text",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/find/{repository}/{text}": {
		"get": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Searches a repository for a module.",
		  "parameters": [
			{
			  "name": "repository",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "text",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "prerelease",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Module"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/module/save": {
		"post": {
		  "tags": [
			"Module"
		  ],
		  "summary": "Saves a module to the local repository.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Module"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/notification": {
		"post": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Creates new notification.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Returns all notifications",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
					}
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Deletes all notifications",
		  "parameters": [
			{
			  "name": "force",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/notification/{id}": {
		"get": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Returns a notification by Id.",
		  "operationId": "GetNotificationById",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Notification"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Notification"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Notification"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Deletes a notification by Id",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/notification/last": {
		"get": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "The last 5 notifications.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/notification/page": {
		"get": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Returns notifications with paging.",
		  "parameters": [
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Notification"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/publishedfolder/{id}": {
		"get": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Returns a published folder by ID",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Updates a published folder.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Deletes a folder from publishedFolders.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/publishedfolder": {
		"post": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Create new published Folder.",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.PublishedFolder"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Return all published folders.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/publishedfolder/{name}/upload": {
		"post": {
		  "tags": [
			"PublishedFolder"
		  ],
		  "summary": "Upload to a published folder.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "multipart/form-data": {
				"schema": {
				  "type": "object",
				  "properties": {
					"files": {
					  "type": "array",
					  "items": {
						"type": "string",
						"format": "binary"
					  }
					}
				  }
				},
				"encoding": {
				  "files": {
					"style": "form"
				  }
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/ratelimit": {
		"get": {
		  "tags": [
			"RateLimit"
		  ],
		  "summary": "Returns all rate limits.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"RateLimit"
		  ],
		  "summary": "Add new rate limit",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/ratelimit/{id}": {
		"get": {
		  "tags": [
			"RateLimit"
		  ],
		  "summary": "Get rate limit by id.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"RateLimit"
		  ],
		  "summary": "Update rate limit by id.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.RateLimitRule"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"RateLimit"
		  ],
		  "summary": "Deletes a rate limit",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/role": {
		"get": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Returns all the valid roles.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Role"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Role"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Role"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Add new role",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/role/{name}": {
		"get": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Get role by name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/role/{id}": {
		"get": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Get role by id.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Role"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Update role by id.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Role"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Deletes a role",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/role/{id}/identity": {
		"get": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Returns all the identities assigned to a role.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/role/{id}/identity/{identityId}": {
		"delete": {
		  "tags": [
			"Role"
		  ],
		  "summary": "Remove an identity from a role.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "identityId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/schedule/cron": {
		"post": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Validates a CRON epxression",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/schedule": {
		"post": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Creates a new schedule for a script.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Gets all schedules.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/schedule/{id}": {
		"put": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Updates a schedule for a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Gets a schedule based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Schedule"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Deletes a schedule based on ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/schedule/{id}/trigger": {
		"post": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Trigger a schedule to run now.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/schedule/timezone": {
		"get": {
		  "tags": [
			"Schedule"
		  ],
		  "summary": "Returns a list of server time zones.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script": {
		"post": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Creates a new script. This will add the script to the git repository and commit.",
		  "requestBody": {
			"description": "The script to create.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Updates a script.",
		  "requestBody": {
			"description": "The script to update",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Script"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns all scripts.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Script"
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/script/{id}": {
		"post": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Starts a script based on the ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "The context to pass to the job.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on ID",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Deletes a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/upload": {
		"post": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Uploads file used for a job.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{module}/{command}": {
		"post": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Starts a script based on the module and command name.",
		  "parameters": [
			{
			  "name": "module",
			  "in": "path",
			  "description": "The module that contains the command to invoke.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "command",
			  "in": "path",
			  "description": "The command to invoke.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"description": "The context to pass to the job.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/path/{scriptFullPath}": {
		"post": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Starts a script based on the full path.",
		  "parameters": [
			{
			  "name": "scriptFullPath",
			  "in": "path",
			  "description": "The full path of the script.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"description": "The context to pass to the job.",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobContext"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/tags/{tagId}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on Tag id",
		  "parameters": [
			{
			  "name": "tagId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/tags/{name}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on Tag name",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{name}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/module/{module}/{command}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on module and command name.",
		  "parameters": [
			{
			  "name": "module",
			  "in": "path",
			  "description": "The module that contains the command",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "command",
			  "in": "path",
			  "description": "The command to invoke",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/path/{fullPath}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns a script based on full path.",
		  "parameters": [
			{
			  "name": "fullPath",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/parameter/{fullPath}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the parameters for a script.",
		  "parameters": [
			{
			  "name": "fullPath",
			  "in": "path",
			  "description": "The name of the script.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{module}/{command}/parameter": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the parameters for a script based on module and command.",
		  "parameters": [
			{
			  "name": "module",
			  "in": "path",
			  "description": "The module that contains the command",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "command",
			  "in": "path",
			  "description": "The command to invoke",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{name}/parameter": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the parameters for a script.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "The name of the script.",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{id}/parameter": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the parameters for a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "ID of the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/job/{scriptFullPath}": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the jobs for a script.",
		  "parameters": [
			{
			  "name": "scriptFullPath",
			  "in": "path",
			  "description": "The full path to the script",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{scriptFullPath}/job": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the jobs for a script.",
		  "parameters": [
			{
			  "name": "scriptFullPath",
			  "in": "path",
			  "description": "The full path to the script",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{id}/job": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the jobs for a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Page",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Job"
				}
			  }
			},
			{
			  "name": "Take",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Skip",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int32"
			  }
			},
			{
			  "name": "Total",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "OrderBy",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "OrderDirection",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			  }
			},
			{
			  "name": "Status",
			  "in": "query",
			  "schema": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  }
			},
			{
			  "name": "Tag",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Identity",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Script",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Child",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Trigger",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Archived",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "Scheduled",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ScheduleId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "ScheduleName",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Parent",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Statuses",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
				}
			  }
			},
			{
			  "name": "Environment",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "Variants",
			  "in": "query",
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  }
			},
			{
			  "name": "Today",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			},
			{
			  "name": "ParentId",
			  "in": "query",
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "Search",
			  "in": "query",
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{id}/tag": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the tags for a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{id}/schedule": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the schedules for a script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID for the script.",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/script/{id}/history": {
		"get": {
		  "tags": [
			"Script"
		  ],
		  "summary": "Returns the file history for a script. This will contain the git commits and diffs for the script.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "The ID of the script",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/settings": {
		"put": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Updates the settings.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Settings"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Settings"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Settings"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Settings"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Gets the settings.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/settings/authentication": {
		"get": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Returns authentication methods.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
					}
				  }
				}
			  }
			}
		  }
		},
		"post": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Creates a new authentication method.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/settings/authentication/{id}": {
		"get": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Returns authentication method by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Updates an authentication method.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethod"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Settings"
		  ],
		  "summary": "Deletes an authentication method.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/stats": {
		"get": {
		  "tags": [
			"Stats"
		  ],
		  "summary": "Returns system stats.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Stats"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Stats"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Stats"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/tag": {
		"post": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Creates a new tag.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Returns all tags",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/tag/{id}": {
		"get": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Returns a tag by ID",
		  "operationId": "GetTagById",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Updates a tag.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Tag"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/tag/{name}": {
		"get": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Returns a tag by Name.",
		  "operationId": "GetTagByName",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Tag"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Tag"
		  ],
		  "summary": "Deletes a tag by Name",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Returns all terminals.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Update terminal by id.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Add new terminal",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/{name}": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Get terminal by name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/terminal/{id}": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Get role by id.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Deletes a terminal",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Returns terminal instances.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Opens a terminal instance.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Terminal"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance/{instanceId}": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Returns terminal instance",
		  "parameters": [
			{
			  "name": "instanceId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance/{instanceId}/history": {
		"get": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Returns terminal instance history",
		  "parameters": [
			{
			  "name": "instanceId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance/{id}": {
		"post": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Invokes a command in the instance of the terminal.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "type": "string"
				}
			  },
			  "application/json": {
				"schema": {
				  "type": "string"
				}
			  },
			  "text/json": {
				"schema": {
				  "type": "string"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "type": "string"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Terminates a terminal instance.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance/{id}/archive": {
		"delete": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Archives a terminal instance.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/terminal/instance/archive": {
		"delete": {
		  "tags": [
			"Terminal"
		  ],
		  "summary": "Archives all terminated terminal instance.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/theme": {
		"get": {
		  "tags": [
			"Theme"
		  ],
		  "summary": "Returns themes for apps.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/translation/{languageId}": {
		"get": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Returns the translations language.",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Deletes a language translation.",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Adds a string to a language",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/translation/{languageId}/string": {
		"get": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Returns the translations language strings.",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/translation": {
		"get": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Returns the translation names.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Creates a new langauge",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"put": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Updates a langauge translation",
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Translation"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/translation/{languageId}/{key}": {
		"put": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Updates a string in a language",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "key",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"delete": {
		  "tags": [
			"Translation"
		  ],
		  "summary": "Deletes a string from a language",
		  "parameters": [
			{
			  "name": "languageId",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "key",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/trigger": {
		"get": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Returns all the valid triggers.",
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
					}
				  }
				},
				"application/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
					}
				  }
				},
				"text/json": {
				  "schema": {
					"type": "array",
					"items": {
					  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Updates a trigger.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Add new trigger",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/trigger/{id}": {
		"get": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Returns a trigger by ID",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Deletes a trigger",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/trigger/{name}": {
		"get": {
		  "tags": [
			"Trigger"
		  ],
		  "summary": "Gets a trigger by name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Trigger"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/usersession": {
		"get": {
		  "tags": [
			"UserSession"
		  ],
		  "summary": "Returns a list of user sessions.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/variable": {
		"put": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Updates a variable.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"post": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Creates a new variable.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				}
			  }
			}
		  }
		},
		"get": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Gets all variables.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/variable/{id}": {
		"put": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Updates a variable.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Gets a variable by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Deletes a variable by ID.",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "integer",
				"format": "int64"
			  }
			},
			{
			  "name": "removeSecret",
			  "in": "query",
			  "description": "",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/variable/secret": {
		"put": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Updates a secret variable.",
		  "requestBody": {
			"description": "",
			"content": {
			  "application/json-patch+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "text/json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  },
			  "application/*+json": {
				"schema": {
				  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		},
		"get": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Import secret variables from the secret manager. It will enumerate all vaults. It does not return the secret value but lists all available secrets.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/variable/{name}": {
		"get": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Gets a variable by name.",
		  "parameters": [
			{
			  "name": "name",
			  "in": "path",
			  "description": "",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				},
				"text/json": {
				  "schema": {
					"$ref": "#/components/schemas/PowerShellUniversal.Variable"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/variable/vault": {
		"get": {
		  "tags": [
			"Variable"
		  ],
		  "summary": "Retrieves secret vaults.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/version": {
		"get": {
		  "tags": [
			"Version"
		  ],
		  "summary": "Returns the current version.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/version/build": {
		"get": {
		  "tags": [
			"Version"
		  ],
		  "summary": "Returns the current version.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/version/update": {
		"get": {
		  "tags": [
			"Version"
		  ],
		  "summary": "Returns information about an updated version.",
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  },
	  "/api/v1/vscode": {
		"post": {
		  "tags": [
			"VsCodeConnect"
		  ],
		  "summary": "Returns a callback for VS Code.",
		  "parameters": [
			{
			  "name": "insiders",
			  "in": "query",
			  "schema": {
				"type": "boolean"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"text/plain": {
				  "schema": {
					"type": "string"
				  }
				},
				"application/json": {
				  "schema": {
					"type": "string"
				  }
				},
				"text/json": {
				  "schema": {
					"type": "string"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/api/v1/vscode/{id}": {
		"get": {
		  "tags": [
			"VsCodeConnect"
		  ],
		  "summary": "Returns connection information back to VS Code",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK"
			}
		  }
		}
	  }
	},
	"components": {
	  "schemas": {
		"PowerShellUniversal.AppToken": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"token": {
			  "type": "string",
			  "nullable": true
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"revoked": {
			  "type": "boolean"
			},
			"role": {
			  "type": "string",
			  "nullable": true
			},
			"created": {
			  "type": "string",
			  "format": "date-time"
			},
			"expiration": {
			  "type": "string",
			  "format": "date-time"
			},
			"revokedDate": {
			  "type": "string",
			  "format": "date-time"
			},
			"createdBy": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"lastUsed": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"permissions": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.AuthenticationMethod": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"type": {
			  "$ref": "#/components/schemas/PowerShellUniversal.AuthenticationMethodType"
			},
			"settings": {
			  "type": "string",
			  "nullable": true
			},
			"disabled": {
			  "type": "boolean"
			},
			"callbackPath": {
			  "type": "string",
			  "nullable": true
			},
			"clientId": {
			  "type": "string",
			  "nullable": true
			},
			"clientSecret": {
			  "type": "string",
			  "nullable": true
			},
			"resource": {
			  "type": "string",
			  "nullable": true
			},
			"authority": {
			  "type": "string",
			  "nullable": true
			},
			"responseType": {
			  "type": "string",
			  "nullable": true
			},
			"saveTokens": {
			  "type": "boolean"
			},
			"useTokenLifetime": {
			  "type": "boolean"
			},
			"getClaimsFromUserInfoEndpoint": {
			  "type": "boolean"
			},
			"scopes": {
			  "type": "string",
			  "nullable": true
			},
			"correlationCookieSameSite": {
			  "type": "string",
			  "nullable": true
			},
			"metadataAddress": {
			  "type": "string",
			  "nullable": true
			},
			"wtrealm": {
			  "type": "string",
			  "nullable": true
			},
			"wreply": {
			  "type": "string",
			  "nullable": true
			},
			"entityId": {
			  "type": "string",
			  "nullable": true
			},
			"identityProviderEntityId": {
			  "type": "string",
			  "nullable": true
			},
			"serviceCertificate": {
			  "type": "string",
			  "nullable": true
			},
			"serviceCertificatePassword": {
			  "type": "string",
			  "nullable": true
			},
			"loadMetadata": {
			  "type": "boolean"
			},
			"signingKey": {
			  "type": "string",
			  "nullable": true
			},
			"singleSignOnServiceUrl": {
			  "type": "string",
			  "nullable": true
			},
			"requireMfa": {
			  "type": "boolean"
			},
			"logoutUrl": {
			  "type": "string",
			  "nullable": true
			},
			"source": {
			  "type": "string",
			  "nullable": true
			},
			"allowUnsolicitedAuthnResponse": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.AuthenticationMethodType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.CacheItem": {
		  "type": "object",
		  "properties": {
			"key": {
			  "type": "string",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"absoluteExpiration": {
			  "type": "string",
			  "nullable": true
			},
			"absoluteExpirationRelativeToNow": {
			  "type": "string",
			  "nullable": true
			},
			"slidingExpiration": {
			  "type": "string",
			  "nullable": true
			},
			"persist": {
			  "type": "boolean"
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"securityContextId": {
			  "type": "string",
			  "format": "uuid"
			},
			"lastRead": {
			  "type": "string",
			  "format": "date-time"
			},
			"created": {
			  "type": "string",
			  "format": "date-time"
			},
			"updated": {
			  "type": "string",
			  "format": "date-time"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ChangeType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6,
			7,
			8,
			9,
			10
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Computer": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"heartBeat": {
			  "type": "string",
			  "format": "date-time"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ComputerStatus"
			},
			"grpcPort": {
			  "type": "integer",
			  "format": "int32"
			},
			"loadingInfo": {
			  "type": "string",
			  "nullable": true
			},
			"maintenance": {
			  "type": "boolean"
			},
			"deleted": {
			  "type": "boolean"
			},
			"loginErrorMessage": {
			  "type": "string",
			  "nullable": true
			},
			"tags": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ComputerTag"
			  },
			  "nullable": true
			},
			"hangfireServerId": {
			  "type": "string",
			  "nullable": true
			},
			"hangfireWorkerCounter": {
			  "type": "integer",
			  "format": "int32"
			},
			"version": {
			  "type": "string",
			  "nullable": true
			},
			"fileSyncTimestamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"deploymentVersion": {
			  "type": "string",
			  "nullable": true
			},
			"deploymentName": {
			  "type": "string",
			  "nullable": true
			},
			"dataItems": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.DataItem"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ComputerStatus": {
		  "enum": [
			0,
			1,
			2,
			3,
			4
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.ComputerTag": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"static": {
			  "type": "boolean"
			},
			"computer": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Credential": {
		  "type": "object",
		  "properties": {
			"userName": {
			  "type": "string",
			  "nullable": true
			},
			"password": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Dashboard": {
		  "required": [
			"baseUrl",
			"name"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"filePath": {
			  "type": "string",
			  "nullable": true
			},
			"baseUrl": {
			  "minLength": 1,
			  "type": "string"
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"processId": {
			  "type": "integer",
			  "format": "int32"
			},
			"processName": {
			  "type": "string",
			  "nullable": true
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.DashboardStatus"
			},
			"authenticated": {
			  "type": "boolean"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"content": {
			  "type": "string",
			  "nullable": true
			},
			"grantAppToken": {
			  "type": "boolean"
			},
			"debug": {
			  "type": "boolean"
			},
			"disableAutoStart": {
			  "type": "boolean"
			},
			"disableStartupLog": {
			  "type": "boolean"
			},
			"sessionTimeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"idleTimeout": {
			  "type": "integer",
			  "format": "int32",
			  "nullable": true
			},
			"deployed": {
			  "type": "boolean"
			},
			"autoDeploy": {
			  "type": "boolean"
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"disableErrorToast": {
			  "type": "boolean"
			},
			"maintenance": {
			  "type": "boolean"
			},
			"tags": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"tag": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"template": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"verboseErrorMessages": {
			  "type": "boolean"
			},
			"disableInteractiveHost": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"command": {
			  "type": "string",
			  "nullable": true
			},
			"favIcon": {
			  "type": "string",
			  "nullable": true
			},
			"hidden": {
			  "type": "boolean"
			},
			"onSessionTimeout": {
			  "type": "string",
			  "nullable": true
			},
			"computerGroup": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"computerGroups": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"startTime": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"deployTime": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"moduleContent": {
			  "type": "string",
			  "nullable": true
			},
			"availableInBranch": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"availableInBranches": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"pages": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.DashboardPage"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.DashboardPage": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"url": {
			  "type": "string",
			  "nullable": true
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"content": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.Endpoint"
			},
			"pageContent": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"defaultHomePage": {
			  "type": "boolean"
			},
			"title": {
			  "type": "string",
			  "nullable": true
			},
			"blank": {
			  "type": "boolean"
			},
			"loading": {
			  "type": "string",
			  "nullable": true
			},
			"onLoading": {
			  "nullable": true
			},
			"navLayout": {
			  "type": "string",
			  "nullable": true
			},
			"navigation": {
			  "type": "array",
			  "items": {
				"type": "object",
				"additionalProperties": { }
			  },
			  "nullable": true
			},
			"logo": {
			  "type": "string",
			  "nullable": true
			},
			"loadNavigation": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.Endpoint"
			},
			"headerPosition": {
			  "type": "string",
			  "nullable": true
			},
			"headerColor": {
			  "type": "string",
			  "nullable": true
			},
			"headerBackgroundColor": {
			  "type": "string",
			  "nullable": true
			},
			"headerContent": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.Endpoint"
			},
			"hideUserName": {
			  "type": "boolean"
			},
			"icon": {
			  "type": "object",
			  "additionalProperties": { },
			  "nullable": true
			},
			"iconName": {
			  "type": "string",
			  "nullable": true
			},
			"hideNavigation": {
			  "type": "boolean"
			},
			"loadTitle": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.Endpoint"
			},
			"componentId": {
			  "type": "string",
			  "nullable": true
			},
			"dashboardId": {
			  "type": "integer",
			  "format": "int64"
			},
			"static": {
			  "type": "boolean"
			},
			"backgroundImage": {
			  "type": "string",
			  "nullable": true
			},
			"backgroundRepeat": {
			  "type": "boolean"
			},
			"fileName": {
			  "type": "string",
			  "nullable": true
			},
			"template": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.DashboardStatus": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.DataItem": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"key": {
			  "type": "string",
			  "nullable": true
			},
			"created": {
			  "type": "string",
			  "format": "date-time"
			},
			"updated": {
			  "type": "string",
			  "format": "date-time"
			},
			"lastRead": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"expiration": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"slidingExpiration": {
			  "type": "string",
			  "format": "date-span",
			  "nullable": true
			},
			"absoluteExpirationRelativeToNow": {
			  "type": "string",
			  "format": "date-span",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "string",
			  "nullable": true
			},
			"identity": {
			  "type": "string",
			  "nullable": true
			},
			"persistent": {
			  "type": "boolean"
			},
			"computer": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Deployment": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"version": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"date": {
			  "type": "string",
			  "format": "date-time"
			},
			"storage": {
			  "$ref": "#/components/schemas/PowerShellUniversal.DeploymentStorage"
			},
			"pinned": {
			  "type": "boolean"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"repository": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.DeploymentContent": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"content": {
			  "type": "string",
			  "format": "byte",
			  "nullable": true
			},
			"deploymentId": {
			  "type": "integer",
			  "format": "int64"
			},
			"deployment": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Deployment"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.DeploymentStorage": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Endpoint": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"url": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"method": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"methods": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"scriptBlock": {
			  "type": "string",
			  "nullable": true
			},
			"authentication": {
			  "type": "boolean"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"regEx": {
			  "type": "boolean"
			},
			"errorAction": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"timeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"fullPath": {
			  "type": "string",
			  "nullable": true
			},
			"persistentLog": {
			  "type": "boolean"
			},
			"tags": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"tag": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"documentation": {
			  "$ref": "#/components/schemas/PowerShellUniversal.EndpointDocumentation"
			},
			"documentationId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"command": {
			  "type": "string",
			  "nullable": true
			},
			"computerGroup": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"computerGroups": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"executionEnvironment": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ExecutionEnvironment"
			},
			"availableInBranch": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"availableInBranches": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.EndpointDocumentation": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"authentication": {
			  "type": "boolean"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"definition": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"url": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"endpoints": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.Endpoint"
			  },
			  "nullable": true
			},
			"contactEmail": {
			  "type": "string",
			  "nullable": true
			},
			"contactName": {
			  "type": "string",
			  "nullable": true
			},
			"contactUrl": {
			  "type": "string",
			  "nullable": true
			},
			"version": {
			  "type": "string",
			  "nullable": true
			},
			"licenseUrl": {
			  "type": "string",
			  "nullable": true
			},
			"licenseName": {
			  "type": "string",
			  "nullable": true
			},
			"termsOfServiceUrl": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.EventHub": {
		  "required": [
			"name"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"authenticated": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.EventType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6,
			7,
			8,
			9,
			10,
			11,
			12,
			13,
			14,
			15,
			16,
			17,
			18,
			19,
			20
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.ExecutionEnvironment": {
		  "required": [
			"name"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"version": {
			  "type": "string",
			  "nullable": true
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"arguments": {
			  "type": "string",
			  "nullable": true
			},
			"modules": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"moduleList": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"variables": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"variable": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"persistentRunspace": {
			  "type": "boolean"
			},
			"psModulePath": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"psModulePaths": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"startupScript": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"startupScripts": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"runspaceRecycling": {
			  "type": "boolean"
			},
			"maxRunspaces": {
			  "type": "integer",
			  "format": "int32"
			},
			"maxVirtualMemory": {
			  "type": "integer",
			  "format": "int64"
			},
			"recycleSchedule": {
			  "type": "string",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"reload": {
			  "type": "boolean"
			},
			"disableImplicitWinCompat": {
			  "type": "boolean"
			},
			"language": {
			  "type": "string",
			  "nullable": true
			},
			"minimal": {
			  "type": "boolean"
			},
			"disabled": {
			  "type": "boolean"
			},
			"processStartupScript": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"supportedFeatures": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/UniversalAutomation.ProcessType"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ExperimentalFeatures": {
		  "enum": [
			0,
			1
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.ExtensionCommand": {
		  "type": "object",
		  "properties": {
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"displayName": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"category": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Features": {
		  "enum": [
			0,
			1,
			2,
			4,
			8,
			16,
			32,
			64,
			128,
			256,
			512
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.FileStatus": {
		  "enum": [
			0,
			1,
			2,
			4,
			8,
			16,
			128,
			256,
			512,
			1024,
			2048,
			4096,
			16384,
			32768,
			-2147483648
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.FileSystemItem": {
		  "type": "object",
		  "properties": {
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"fullName": {
			  "type": "string",
			  "nullable": true
			},
			"items": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.FileSystemItem"
			  },
			  "nullable": true
			},
			"isLeaf": {
			  "type": "boolean"
			},
			"content": {
			  "type": "string",
			  "nullable": true
			},
			"id": {
			  "type": "integer",
			  "format": "int64"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.FirstRunModel": {
		  "type": "object",
		  "properties": {
			"userName": {
			  "type": "string",
			  "nullable": true
			},
			"password": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Folder": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "$ref": "#/components/schemas/PowerShellUniversal.FolderType"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"children": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.Folder"
			  },
			  "nullable": true
			},
			"parent": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
			},
			"parentId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"identityId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.FolderType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.GitChange": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"isDirectory": {
			  "type": "boolean"
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ChangeType"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.FileStatus"
			},
			"commitId": {
			  "type": "string",
			  "nullable": true
			},
			"committer": {
			  "type": "string",
			  "nullable": true
			},
			"notes": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.GitCommit": {
		  "type": "object",
		  "properties": {
			"sha": {
			  "type": "string",
			  "nullable": true
			},
			"author": {
			  "type": "string",
			  "nullable": true
			},
			"message": {
			  "type": "string",
			  "nullable": true
			},
			"timestamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"changes": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.GitChange"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.GitInitBehavior": {
		  "enum": [
			0,
			1
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.GitMode": {
		  "enum": [
			0,
			1
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.GitSettings": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"remote": {
			  "type": "string",
			  "nullable": true
			},
			"branch": {
			  "type": "string",
			  "nullable": true
			},
			"syncBehavior": {
			  "$ref": "#/components/schemas/PowerShellUniversal.GitSyncBehavior"
			},
			"initBehavior": {
			  "$ref": "#/components/schemas/PowerShellUniversal.GitInitBehavior"
			},
			"userName": {
			  "type": "string",
			  "nullable": true
			},
			"password": {
			  "type": "string",
			  "nullable": true
			},
			"interval": {
			  "type": "integer",
			  "format": "int32"
			},
			"externalGit": {
			  "type": "boolean"
			},
			"manualMode": {
			  "type": "boolean",
			  "deprecated": true
			},
			"proxyUrl": {
			  "type": "string",
			  "nullable": true
			},
			"mode": {
			  "$ref": "#/components/schemas/PowerShellUniversal.GitMode"
			},
			"bundle": {
			  "type": "string",
			  "format": "byte",
			  "nullable": true
			},
			"bundleTimestamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"bundlePath": {
			  "type": "string",
			  "nullable": true
			},
			"updateSubmodules": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"paused": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.GitStatus": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"commitId": {
			  "type": "string",
			  "nullable": true
			},
			"timestamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"syncTime": {
			  "type": "string",
			  "format": "date-span"
			},
			"changes": {
			  "type": "integer",
			  "format": "int32"
			},
			"location": {
			  "type": "string",
			  "nullable": true
			},
			"remote": {
			  "type": "string",
			  "nullable": true
			},
			"result": {
			  "$ref": "#/components/schemas/PowerShellUniversal.GitStatusResult"
			},
			"resultMessage": {
			  "type": "string",
			  "nullable": true
			},
			"computerName": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.GitStatusResult": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.GitSyncBehavior": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Identity": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"source": {
			  "$ref": "#/components/schemas/PowerShellUniversal.IdentitySource"
			},
			"roleName": {
			  "type": "string",
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"credentialVault": {
			  "type": "string",
			  "nullable": true
			},
			"password": {
			  "type": "string",
			  "nullable": true
			},
			"localAccount": {
			  "type": "boolean"
			},
			"oldPassword": {
			  "type": "string",
			  "nullable": true
			},
			"settings": {
			  "type": "string",
			  "nullable": true
			},
			"theme": {
			  "type": "string",
			  "nullable": true
			},
			"jobColumns": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"jobStatuses": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"passwordLastSet": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.IdentitySource": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Job": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"createdTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"startTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"endTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			},
			"output": {
			  "type": "string",
			  "nullable": true
			},
			"script": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Script"
			},
			"isScriptDeleted": {
			  "type": "boolean"
			},
			"scriptFullPath": {
			  "type": "string",
			  "nullable": true
			},
			"scriptCommitId": {
			  "type": "string",
			  "nullable": true
			},
			"appToken": {
			  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"parentJob": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"parentJobId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"parentLineNumber": {
			  "type": "integer",
			  "format": "int32"
			},
			"debug": {
			  "type": "boolean"
			},
			"computerName": {
			  "type": "string",
			  "nullable": true
			},
			"port": {
			  "type": "integer",
			  "format": "int32"
			},
			"processId": {
			  "type": "integer",
			  "format": "int32"
			},
			"memoryBytes": {
			  "type": "integer",
			  "format": "int64"
			},
			"runspaceId": {
			  "type": "integer",
			  "format": "int32"
			},
			"activity": {
			  "type": "string",
			  "nullable": true
			},
			"currentOperation": {
			  "type": "string",
			  "nullable": true
			},
			"percentComplete": {
			  "type": "integer",
			  "format": "int32"
			},
			"secondsRemaining": {
			  "type": "integer",
			  "format": "int32"
			},
			"statusDescription": {
			  "type": "string",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"agent": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
			},
			"computer": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Computer"
			},
			"children": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.Job"
			  },
			  "nullable": true
			},
			"jobOutput": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobOutput"
			  },
			  "nullable": true
			},
			"parameters": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobParameter"
			  },
			  "nullable": true
			},
			"notes": {
			  "type": "string",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"scheduleId": {
			  "type": "integer",
			  "format": "int64"
			},
			"triggered": {
			  "type": "boolean"
			},
			"trigger": {
			  "type": "string",
			  "nullable": true
			},
			"accessToken": {
			  "type": "string",
			  "nullable": true
			},
			"idToken": {
			  "type": "string",
			  "nullable": true
			},
			"retryCount": {
			  "type": "integer",
			  "format": "int32"
			},
			"tags": {
			  "type": "string",
			  "nullable": true
			},
			"schedule": {
			  "type": "string",
			  "nullable": true
			},
			"archived": {
			  "type": "boolean"
			},
			"batch": {
			  "type": "boolean"
			},
			"runId": {
			  "type": "string",
			  "format": "uuid",
			  "nullable": true
			},
			"roles": {
			  "type": "string",
			  "nullable": true
			},
			"refreshToken": {
			  "type": "string",
			  "nullable": true
			},
			"securityContextId": {
			  "type": "string",
			  "format": "uuid",
			  "nullable": true
			},
			"jobFeedbacks": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobFeedback"
			  },
			  "nullable": true
			},
			"notifications": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.Notification"
			  },
			  "nullable": true
			},
			"jobPipelineOutputs": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobPipelineOutput"
			  },
			  "nullable": true
			},
			"debugPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"verbosePreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"informationPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"warningPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"errorPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"progressPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobContext": {
		  "type": "object",
		  "properties": {
			"jobParameters": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobParameter"
			  },
			  "nullable": true
			},
			"parentJobId": {
			  "type": "integer",
			  "format": "int64"
			},
			"lineNumber": {
			  "type": "integer",
			  "format": "int32"
			},
			"debug": {
			  "type": "boolean"
			},
			"computer": {
			  "type": "string",
			  "nullable": true
			},
			"errorAction": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"notes": {
			  "type": "string",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"triggered": {
			  "type": "boolean"
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"userName": {
			  "type": "string",
			  "nullable": true
			},
			"accessToken": {
			  "type": "string",
			  "nullable": true
			},
			"idToken": {
			  "type": "string",
			  "nullable": true
			},
			"scriptId": {
			  "type": "integer",
			  "format": "int64"
			},
			"scriptFullPath": {
			  "type": "string",
			  "nullable": true
			},
			"parameterSet": {
			  "type": "string",
			  "nullable": true
			},
			"additionalParameters": {
			  "type": "object",
			  "additionalProperties": {
				"type": "string",
				"nullable": true
			  },
			  "nullable": true
			},
			"triggerName": {
			  "type": "string",
			  "nullable": true
			},
			"delay": {
			  "type": "integer",
			  "format": "int32"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"command": {
			  "type": "string",
			  "nullable": true
			},
			"refreshToken": {
			  "type": "string",
			  "nullable": true
			},
			"securityContext": {
			  "$ref": "#/components/schemas/PowerShellUniversal.SecurityContext"
			},
			"tags": {
			  "type": "string",
			  "nullable": true
			},
			"debugPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"verbosePreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"informationPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"warningPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"progressPreference": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"scheduleId": {
			  "type": "integer",
			  "format": "int64"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobFeedback": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"data": {
			  "type": "string",
			  "nullable": true
			},
			"message": {
			  "type": "string",
			  "nullable": true
			},
			"complete": {
			  "type": "boolean"
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"job": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"secure": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobOutput": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"message": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "$ref": "#/components/schemas/PowerShellUniversal.JobOutputType"
			},
			"data": {
			  "type": "string",
			  "nullable": true
			},
			"job": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"timestamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"jobId": {
			  "type": "integer",
			  "format": "int64"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobOutputType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.JobParameter": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"displayName": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "type": "string",
			  "nullable": true
			},
			"job": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"variable": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Variable"
			},
			"isVariable": {
			  "type": "boolean"
			},
			"displayType": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ParameterType"
			},
			"jsonData": {
			  "type": "string",
			  "nullable": true
			},
			"file": {
			  "$ref": "#/components/schemas/PowerShellUniversal.PSUFile"
			},
			"fileId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"boolValue": {
			  "type": "boolean"
			},
			"stringValue": {
			  "type": "string",
			  "nullable": true
			},
			"credentialValue": {
			  "type": "string",
			  "nullable": true
			},
			"stringArrayValue": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"integerValue": {
			  "type": "integer",
			  "format": "int32"
			},
			"dateValue": {
			  "type": "string",
			  "format": "date-time"
			},
			"secureStringValue": {
			  "type": "string",
			  "nullable": true
			},
			"validValues": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"displayValue": {
			  "type": "string",
			  "nullable": true,
			  "readOnly": true
			},
			"formValue": {
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobPipelineOutput": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"data": {
			  "type": "string",
			  "nullable": true
			},
			"jsonData": {
			  "type": "string",
			  "nullable": true
			},
			"job": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"jobId": {
			  "type": "integer",
			  "format": "int64"
			},
			"file": {
			  "$ref": "#/components/schemas/PowerShellUniversal.PSUFile"
			},
			"fileId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.JobStatus": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6,
			7,
			8,
			9,
			10,
			11,
			12
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.License": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"licenseText": {
			  "type": "string",
			  "nullable": true
			},
			"licensee": {
			  "type": "string",
			  "nullable": true
			},
			"startDate": {
			  "type": "string",
			  "format": "date-time"
			},
			"endDate": {
			  "type": "string",
			  "format": "date-time"
			},
			"seats": {
			  "type": "integer",
			  "format": "int32"
			},
			"product": {
			  "type": "string",
			  "nullable": true
			},
			"status": {
			  "type": "string",
			  "nullable": true
			},
			"developer": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"source": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"online": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.LogEntry": {
		  "type": "object",
		  "properties": {
			"entryId": {
			  "type": "string",
			  "nullable": true
			},
			"timeStamp": {
			  "type": "string",
			  "format": "date-time"
			},
			"message": {
			  "type": "string",
			  "nullable": true
			},
			"level": {
			  "type": "string",
			  "nullable": true
			},
			"resource": {
			  "type": "string",
			  "nullable": true
			},
			"scope": {
			  "type": "string",
			  "nullable": true
			},
			"feature": {
			  "type": "string",
			  "nullable": true
			},
			"nodeName": {
			  "type": "string",
			  "nullable": true
			},
			"messageTemplate": {
			  "type": "string",
			  "nullable": true
			},
			"exception": {
			  "type": "string",
			  "nullable": true
			},
			"properties": {
			  "type": "string",
			  "nullable": true
			},
			"logId": {
			  "type": "integer",
			  "format": "int64"
			},
			"id": {
			  "type": "integer",
			  "format": "int64"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.LogExportParameters": {
		  "type": "object",
		  "properties": {
			"start": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"end": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"level": {
			  "type": "string",
			  "nullable": true
			},
			"resource": {
			  "type": "string",
			  "nullable": true
			},
			"scope": {
			  "type": "string",
			  "nullable": true
			},
			"feature": {
			  "type": "string",
			  "nullable": true
			},
			"nodeName": {
			  "type": "string",
			  "nullable": true
			},
			"message": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "$ref": "#/components/schemas/PowerShellUniversal.LogExportType"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.LogExportType": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.LoggingTarget": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"type": {
			  "type": "string",
			  "nullable": true
			},
			"level": {
			  "type": "string",
			  "nullable": true
			},
			"properties": {
			  "type": "object",
			  "additionalProperties": {
				"type": "string",
				"nullable": true
			  },
			  "nullable": true
			},
			"feature": {
			  "type": "string",
			  "nullable": true
			},
			"resource": {
			  "type": "string",
			  "nullable": true
			},
			"scope": {
			  "type": "string",
			  "nullable": true
			},
			"scriptBlock": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"command": {
			  "type": "string",
			  "nullable": true
			},
			"url": {
			  "type": "string",
			  "nullable": true
			},
			"port": {
			  "type": "integer",
			  "format": "int32"
			},
			"hostName": {
			  "type": "string",
			  "nullable": true
			},
			"connectionString": {
			  "type": "string",
			  "nullable": true
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"format": {
			  "type": "string",
			  "nullable": true
			},
			"retentionPeriod": {
			  "type": "integer",
			  "format": "int32"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Module": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"path": {
			  "type": "string",
			  "nullable": true
			},
			"version": {
			  "type": "string",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"content": {
			  "type": "string",
			  "nullable": true
			},
			"source": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ModuleSource"
			},
			"repository": {
			  "type": "string",
			  "nullable": true
			},
			"prerelease": {
			  "type": "boolean"
			},
			"extension": {
			  "type": "boolean"
			},
			"commands": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ExtensionCommand"
			  },
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"url": {
			  "type": "string",
			  "nullable": true
			},
			"extensionFeatures": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"downloads": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"isLocal": {
			  "type": "boolean"
			},
			"projectUri": {
			  "type": "string",
			  "nullable": true
			},
			"iconUri": {
			  "type": "string",
			  "nullable": true
			},
			"tags": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"updatedVersion": {
			  "type": "string",
			  "nullable": true
			},
			"manifestContent": {
			  "type": "string",
			  "nullable": true
			},
			"lastUpdateCheck": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ModuleSource": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Notification": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"title": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"createdTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"createdBy": {
			  "type": "string",
			  "nullable": true
			},
			"job": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Job"
			},
			"script": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Script"
			},
			"dashboard": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Dashboard"
			},
			"license": {
			  "$ref": "#/components/schemas/PowerShellUniversal.License"
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"level": {
			  "$ref": "#/components/schemas/PowerShellUniversal.NotificationLevel"
			},
			"viewed": {
			  "type": "boolean"
			},
			"stackTrace": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.NotificationLevel": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.OldBranding": {
		  "type": "object",
		  "properties": {
			"loadingPageTitle": {
			  "type": "string",
			  "nullable": true
			},
			"loadingPageDescription": {
			  "type": "string",
			  "nullable": true
			},
			"pageNotFoundDescription": {
			  "type": "string",
			  "nullable": true
			},
			"notAuthorizedDescription": {
			  "type": "string",
			  "nullable": true
			},
			"appNotRunningDescription": {
			  "type": "string",
			  "nullable": true
			},
			"pageNotFoundTitle": {
			  "type": "string",
			  "nullable": true
			},
			"notAuthorizedTitle": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.OrderDirection": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.PSUFile": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"fileName": {
			  "type": "string",
			  "nullable": true
			},
			"content": {
			  "type": "string",
			  "format": "byte",
			  "nullable": true
			},
			"jobParameter": {
			  "$ref": "#/components/schemas/PowerShellUniversal.JobParameter"
			},
			"jobPipelineOutput": {
			  "$ref": "#/components/schemas/PowerShellUniversal.JobPipelineOutput"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ParameterType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6,
			7,
			8,
			9,
			10
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.PortalOutputType": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.PublishedFolder": {
		  "required": [
			"name",
			"path",
			"requestPath"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"requestPath": {
			  "minLength": 1,
			  "type": "string"
			},
			"path": {
			  "minLength": 1,
			  "type": "string"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"authentication": {
			  "type": "boolean"
			},
			"defaultDocument": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"defaultDocuments": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"impersonation": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.RateLimitRule": {
		  "type": "object",
		  "properties": {
			"endpoint": {
			  "type": "string",
			  "nullable": true
			},
			"period": {
			  "type": "string",
			  "format": "date-span"
			},
			"limit": {
			  "type": "integer",
			  "format": "int32"
			},
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Role": {
		  "required": [
			"name"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"policy": {
			  "type": "string",
			  "nullable": true
			},
			"claimType": {
			  "type": "string",
			  "nullable": true
			},
			"claimValue": {
			  "type": "string",
			  "nullable": true
			},
			"disabled": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"defaultRoute": {
			  "type": "string",
			  "nullable": true
			},
			"childRoles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"childRole": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"builtIn": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"permissions": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"permission": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Schedule": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"identity": {
			  "type": "string",
			  "nullable": true
			},
			"appToken": {
			  "$ref": "#/components/schemas/PowerShellUniversal.AppToken"
			},
			"cron": {
			  "type": "string",
			  "nullable": true
			},
			"nextExecution": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"script": {
			  "type": "string",
			  "nullable": true
			},
			"timeZoneString": {
			  "type": "string",
			  "nullable": true
			},
			"continuous": {
			  "type": "boolean"
			},
			"delay": {
			  "type": "string",
			  "format": "date-span",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"oneTime": {
			  "type": "string",
			  "format": "date-time",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"parameters": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ScheduleParameter"
			  },
			  "nullable": true
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"paused": {
			  "type": "boolean"
			},
			"timeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"condition": {
			  "type": "string",
			  "nullable": true
			},
			"randomDelay": {
			  "type": "boolean"
			},
			"computer": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"oneWayOneTime": {
			  "type": "boolean"
			},
			"randomDelayMaximum": {
			  "type": "integer",
			  "format": "int32"
			},
			"availableInBranch": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"availableInBranches": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"valid": {
			  "type": "boolean",
			  "readOnly": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ScheduleParameter": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "type": "string",
			  "nullable": true
			},
			"variable": {
			  "type": "boolean"
			},
			"displayValue": {
			  "type": "string",
			  "nullable": true
			},
			"objectValue": {
			  "type": "string",
			  "nullable": true
			},
			"boolValue": {
			  "type": "boolean"
			},
			"stringValue": {
			  "type": "string",
			  "nullable": true
			},
			"stringArrayValue": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"integerValue": {
			  "type": "integer",
			  "format": "int32"
			},
			"dateValue": {
			  "type": "string",
			  "format": "date-time"
			},
			"secureStringValue": {
			  "type": "string",
			  "nullable": true
			},
			"validValues": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Script": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"oldName": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"createdTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"manualTime": {
			  "type": "number",
			  "format": "double"
			},
			"timeOut": {
			  "type": "number",
			  "format": "double"
			},
			"commitId": {
			  "type": "string",
			  "nullable": true
			},
			"content": {
			  "type": "string",
			  "nullable": true
			},
			"scriptParameters": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ScriptParameter"
			  },
			  "nullable": true
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ScriptStatus"
			},
			"tags": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"tag": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"fullPath": {
			  "type": "string",
			  "nullable": true
			},
			"requiredPowerShellVersion": {
			  "type": "string",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"errorAction": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"informationAction": {
			  "$ref": "#/components/schemas/System.Management.Automation.ActionPreference"
			},
			"verbose": {
			  "type": "boolean"
			},
			"debug": {
			  "type": "boolean"
			},
			"commitNotes": {
			  "type": "string",
			  "nullable": true
			},
			"disableManualInvocation": {
			  "type": "boolean"
			},
			"maxHistory": {
			  "type": "integer",
			  "format": "int32"
			},
			"concurrentJobs": {
			  "type": "integer",
			  "format": "int32"
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"retryLimit": {
			  "type": "integer",
			  "format": "int32"
			},
			"discardPipeline": {
			  "type": "boolean"
			},
			"longDescription": {
			  "type": "string",
			  "nullable": true
			},
			"links": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"examples": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ScriptBlockExample"
			  },
			  "nullable": true
			},
			"defaultParameterSet": {
			  "type": "string",
			  "nullable": true
			},
			"loadProfile": {
			  "type": "boolean"
			},
			"workingDirectory": {
			  "type": "string",
			  "nullable": true
			},
			"parameterSets": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"command": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"documentation": {
			  "type": "string",
			  "nullable": true
			},
			"previousContent": {
			  "type": "string",
			  "nullable": true
			},
			"folder": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Folder"
			},
			"folderId": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"portalOutputType": {
			  "$ref": "#/components/schemas/PowerShellUniversal.PortalOutputType"
			},
			"availableInBranch": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"availableInBranches": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ScriptBlockExample": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"title": {
			  "type": "string",
			  "nullable": true
			},
			"code": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ScriptParameter": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"displayName": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "type": "string",
			  "nullable": true
			},
			"scriptId": {
			  "type": "integer",
			  "format": "int64"
			},
			"defaultValue": {
			  "type": "string",
			  "nullable": true
			},
			"required": {
			  "type": "boolean"
			},
			"displayType": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ParameterType"
			},
			"validValues": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"helpText": {
			  "type": "string",
			  "nullable": true
			},
			"parameterSet": {
			  "type": "string",
			  "nullable": true
			},
			"resolvedDefaultValue": {
			  "type": "string",
			  "nullable": true
			},
			"iValidateSetValuesGenerator": {
			  "type": "string",
			  "nullable": true
			},
			"using": {
			  "type": "string",
			  "nullable": true
			},
			"dynamic": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ScriptStatus": {
		  "enum": [
			0,
			1,
			2,
			3
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.SecurityContext": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "string",
			  "format": "uuid",
			  "readOnly": true
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true,
			  "readOnly": true
			},
			"permissions": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true,
			  "readOnly": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Settings": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"loggingFilePath": {
			  "type": "string",
			  "nullable": true
			},
			"logLevel": {
			  "type": "string",
			  "nullable": true
			},
			"microsoftLogLevel": {
			  "type": "string",
			  "nullable": true
			},
			"defaultPowerShellVersion": {
			  "type": "string",
			  "nullable": true
			},
			"defaultEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"repositoryPath": {
			  "type": "string",
			  "nullable": true
			},
			"databasePath": {
			  "type": "string",
			  "nullable": true
			},
			"pathDivider": {
			  "type": "string"
			},
			"groomDays": {
			  "type": "integer",
			  "format": "int32"
			},
			"concurrentJobLimit": {
			  "type": "integer",
			  "format": "int32"
			},
			"telemetry": {
			  "type": "boolean"
			},
			"hideApi": {
			  "type": "boolean"
			},
			"hideAutomation": {
			  "type": "boolean"
			},
			"hideDashboard": {
			  "type": "boolean"
			},
			"hideHomePage": {
			  "type": "boolean"
			},
			"disableAutoReload": {
			  "type": "boolean"
			},
			"securityPowerShellVersion": {
			  "type": "string",
			  "nullable": true
			},
			"securityEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"apiEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"defaultPage": {
			  "type": "string",
			  "nullable": true
			},
			"rateLimitIpAddressAllowList": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"rateLimitEndpointAllowList": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"rateLimitClientAllowList": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"disableUpdateCheck": {
			  "type": "boolean"
			},
			"scriptBaseFolder": {
			  "type": "string",
			  "nullable": true
			},
			"adminConsoleTitle": {
			  "type": "string",
			  "nullable": true
			},
			"adminConsoleLogo": {
			  "type": "string",
			  "nullable": true
			},
			"sessionTimeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"gitRemote": {
			  "type": "string",
			  "nullable": true
			},
			"gitBranch": {
			  "type": "string",
			  "nullable": true
			},
			"gitSyncBehavior": {
			  "$ref": "#/components/schemas/PowerShellUniversal.GitSyncBehavior"
			},
			"gitSyncEnabled": {
			  "type": "boolean"
			},
			"groomInterval": {
			  "type": "integer",
			  "format": "int32"
			},
			"notificationLevel": {
			  "$ref": "#/components/schemas/PowerShellUniversal.NotificationLevel"
			},
			"proxyUri": {
			  "type": "string",
			  "nullable": true
			},
			"proxyCredential": {
			  "type": "string",
			  "nullable": true
			},
			"jobHandshakeTimeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"hideRunAs": {
			  "type": "boolean"
			},
			"fallbackLanguageId": {
			  "type": "string",
			  "nullable": true
			},
			"splatting": {
			  "type": "boolean"
			},
			"favIcon": {
			  "type": "string",
			  "nullable": true
			},
			"experimentalFeatures": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ExperimentalFeatures"
			},
			"disabledFeatures": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Features"
			},
			"limitIdentities": {
			  "type": "boolean"
			},
			"dontLoadProfile": {
			  "type": "boolean"
			},
			"windowsCompatEnabled": {
			  "type": "boolean"
			},
			"enhancedAppTokenSecurity": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"defaultDashboardTheme": {
			  "type": "string",
			  "nullable": true
			},
			"useLogoSize": {
			  "type": "boolean"
			},
			"darkTheme": {
			  "type": "boolean"
			},
			"hideEnvironment": {
			  "type": "boolean"
			},
			"hideRunOn": {
			  "type": "boolean"
			},
			"disableFormatOnSave": {
			  "type": "boolean"
			},
			"contentSecurityPolicy": {
			  "type": "string",
			  "nullable": true
			},
			"logGroomDays": {
			  "type": "integer",
			  "format": "int32"
			},
			"branding": {
			  "$ref": "#/components/schemas/PowerShellUniversal.OldBranding"
			},
			"preformattedJobOutput": {
			  "type": "boolean"
			},
			"moduleDiscoveryFrequency": {
			  "type": "string",
			  "nullable": true
			},
			"debuggerEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"fileEncoding": {
			  "type": "string",
			  "nullable": true
			},
			"maxJobMemory": {
			  "type": "integer",
			  "format": "int32"
			},
			"jobRunId": {
			  "type": "boolean"
			},
			"apiBaseFolder": {
			  "type": "string",
			  "nullable": true
			},
			"checkForModuleUpdates": {
			  "type": "boolean"
			},
			"hideRunLater": {
			  "type": "boolean"
			},
			"anonymousApiDocumentation": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"maximumTokenLifetime": {
			  "type": "integer",
			  "format": "int32"
			},
			"portalDisabled": {
			  "type": "boolean"
			},
			"portalRole": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"portalRoles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"defaultTokenLifetime": {
			  "type": "integer",
			  "format": "int32"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Stats": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"runningJobs": {
			  "type": "integer",
			  "format": "int32"
			},
			"jobsRunToday": {
			  "type": "integer",
			  "format": "int32"
			},
			"jobsFailedToday": {
			  "type": "integer",
			  "format": "int32"
			},
			"jobsWaitingOnFeedback": {
			  "type": "integer",
			  "format": "int32"
			},
			"endpoints": {
			  "type": "integer",
			  "format": "int32"
			},
			"runningDashboards": {
			  "type": "integer",
			  "format": "int32"
			},
			"sessions": {
			  "type": "integer",
			  "format": "int32"
			},
			"licensed": {
			  "type": "boolean"
			},
			"licenseExpiration": {
			  "type": "string",
			  "format": "date-time"
			},
			"licensedName": {
			  "type": "string",
			  "nullable": true
			},
			"defaultEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"apiEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"securityEnvironment": {
			  "type": "string",
			  "nullable": true
			},
			"pages": {
			  "type": "integer",
			  "format": "int32"
			},
			"scheduledJobs": {
			  "type": "integer",
			  "format": "int32"
			},
			"licenseStatus": {
			  "type": "string",
			  "nullable": true
			},
			"computer": {
			  "type": "string",
			  "nullable": true
			},
			"processes": {
			  "type": "integer",
			  "format": "int64"
			},
			"uptime": {
			  "type": "string",
			  "format": "date-time"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Tag": {
		  "required": [
			"name"
		  ],
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "minLength": 1,
			  "type": "string"
			},
			"color": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"editable": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"fontColor": {
			  "type": "string",
			  "nullable": true
			},
			"displayInPortal": {
			  "type": "boolean"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Terminal": {
		  "type": "object",
		  "properties": {
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"credential": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"keepHistory": {
			  "type": "boolean"
			},
			"idleTimeout": {
			  "type": "integer",
			  "format": "int32"
			},
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.TerminalCommand": {
		  "type": "object",
		  "properties": {
			"terminal": {
			  "$ref": "#/components/schemas/PowerShellUniversal.TerminalInstance"
			},
			"command": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.TerminalInstance": {
		  "type": "object",
		  "properties": {
			"terminal": {
			  "type": "string",
			  "nullable": true
			},
			"processId": {
			  "type": "integer",
			  "format": "int32"
			},
			"identity": {
			  "$ref": "#/components/schemas/PowerShellUniversal.Identity"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.TerminalStatus"
			},
			"idleTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"startTime": {
			  "type": "string",
			  "format": "date-time"
			},
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"port": {
			  "type": "integer",
			  "format": "int32"
			},
			"archived": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.TerminalStatus": {
		  "enum": [
			0,
			1,
			2,
			3
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"PowerShellUniversal.Theme": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"light": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemePalette"
			},
			"dark": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemePalette"
			},
			"spacing": {
			  "type": "integer",
			  "format": "int32"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ThemeColor": {
		  "type": "object",
		  "properties": {
			"light": {
			  "type": "string",
			  "nullable": true
			},
			"main": {
			  "type": "string",
			  "nullable": true
			},
			"dark": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.ThemePalette": {
		  "type": "object",
		  "properties": {
			"primary": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"secondary": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"accent": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"error": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"info": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"success": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			},
			"warning": {
			  "$ref": "#/components/schemas/PowerShellUniversal.ThemeColor"
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Translation": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"languageId": {
			  "type": "string",
			  "nullable": true
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"strings": {
			  "type": "object",
			  "additionalProperties": {
				"type": "string",
				"nullable": true
			  },
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"stringCount": {
			  "type": "integer",
			  "format": "int32",
			  "readOnly": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.Trigger": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"script": {
			  "type": "string",
			  "nullable": true
			},
			"eventType": {
			  "$ref": "#/components/schemas/PowerShellUniversal.EventType"
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"parameters": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.ScheduleParameter"
			  },
			  "nullable": true
			},
			"triggerScript": {
			  "type": "string",
			  "nullable": true
			},
			"dashboard": {
			  "type": "string",
			  "nullable": true
			},
			"delay": {
			  "type": "integer",
			  "format": "int32"
			},
			"computer": {
			  "type": "string",
			  "nullable": true
			},
			"readOnly": {
			  "type": "boolean"
			},
			"condition": {
			  "type": "string",
			  "nullable": true
			},
			"module": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.UDDashboard": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"title": {
			  "type": "string",
			  "nullable": true
			},
			"theme": {
			  "$ref": "#/components/schemas/PowerShellUniversal.UDTheme"
			},
			"content": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.UDTheme": {
		  "type": "object",
		  "additionalProperties": false
		},
		"PowerShellUniversal.Variable": {
		  "type": "object",
		  "properties": {
			"id": {
			  "type": "integer",
			  "format": "int64"
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			},
			"userName": {
			  "type": "string",
			  "nullable": true
			},
			"password": {
			  "type": "string",
			  "nullable": true
			},
			"secret": {
			  "type": "boolean"
			},
			"vault": {
			  "type": "string",
			  "nullable": true
			},
			"type": {
			  "type": "string",
			  "nullable": true
			},
			"description": {
			  "type": "string",
			  "nullable": true
			},
			"missingSecret": {
			  "type": "boolean"
			},
			"disableRunAsSupport": {
			  "type": "boolean"
			},
			"deleteSecret": {
			  "type": "boolean"
			},
			"readOnly": {
			  "type": "boolean"
			},
			"database": {
			  "type": "boolean"
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"scope": {
			  "$ref": "#/components/schemas/PowerShellUniversal.VariableScope"
			},
			"tags": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"tag": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"roles": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"force": {
			  "type": "boolean"
			},
			"module": {
			  "type": "string",
			  "nullable": true
			},
			"required": {
			  "type": "boolean"
			},
			"displayValue": {
			  "type": "string",
			  "nullable": true,
			  "readOnly": true
			}
		  },
		  "additionalProperties": false
		},
		"PowerShellUniversal.VariableScope": {
		  "enum": [
			0,
			1
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"System.Collections.Generic.KeyValuePair`2[System.String,System.String]": {
		  "type": "object",
		  "properties": {
			"key": {
			  "type": "string",
			  "nullable": true
			},
			"value": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"System.Management.Automation.ActionPreference": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"UniversalAutomation.Common.Interfaces.Feature": {
		  "enum": [
			0,
			1,
			2
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"UniversalAutomation.ProcessType": {
		  "enum": [
			0,
			1,
			2,
			3,
			4,
			5,
			6,
			7
		  ],
		  "type": "integer",
		  "format": "int32"
		},
		"UniversalAutomation.ViewModels.JobPagedViewModel": {
		  "type": "object",
		  "properties": {
			"page": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.Job"
			  },
			  "nullable": true
			},
			"take": {
			  "type": "integer",
			  "format": "int32"
			},
			"skip": {
			  "type": "integer",
			  "format": "int32"
			},
			"total": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"orderBy": {
			  "type": "string",
			  "nullable": true
			},
			"orderDirection": {
			  "$ref": "#/components/schemas/PowerShellUniversal.OrderDirection"
			},
			"status": {
			  "$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			},
			"tag": {
			  "type": "string",
			  "nullable": true
			},
			"identity": {
			  "type": "string",
			  "nullable": true
			},
			"script": {
			  "type": "string",
			  "nullable": true
			},
			"child": {
			  "type": "boolean"
			},
			"trigger": {
			  "type": "boolean"
			},
			"archived": {
			  "type": "boolean"
			},
			"scheduled": {
			  "type": "boolean"
			},
			"scheduleId": {
			  "type": "integer",
			  "format": "int64"
			},
			"scheduleName": {
			  "type": "string",
			  "nullable": true
			},
			"parent": {
			  "type": "integer",
			  "format": "int64",
			  "nullable": true
			},
			"statuses": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/PowerShellUniversal.JobStatus"
			  },
			  "nullable": true
			},
			"environment": {
			  "type": "string",
			  "nullable": true
			},
			"variants": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"today": {
			  "type": "boolean"
			},
			"parentId": {
			  "type": "integer",
			  "format": "int64"
			},
			"search": {
			  "type": "string",
			  "nullable": true
			}
		  },
		  "additionalProperties": false
		},
		"UniversalDashboard.Models.Endpoint": {
		  "type": "object",
		  "properties": {
			"variables": {
			  "type": "object",
			  "additionalProperties": {
				"nullable": true
			  },
			  "nullable": true
			},
			"argumentList": {
			  "type": "array",
			  "items": { },
			  "nullable": true
			},
			"name": {
			  "type": "string",
			  "nullable": true
			},
			"schedule": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.EndpointSchedule"
			},
			"sessionId": {
			  "type": "string",
			  "nullable": true
			},
			"connectionId": {
			  "type": "string",
			  "nullable": true
			},
			"pageId": {
			  "type": "string",
			  "nullable": true
			},
			"role": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"movingAverage": {
			  "$ref": "#/components/schemas/UniversalDashboard.Models.MovingAverage"
			},
			"averageExecutionTime": {
			  "type": "number",
			  "format": "float"
			},
			"contentType": {
			  "type": "string",
			  "nullable": true
			},
			"scriptOffset": {
			  "type": "integer",
			  "format": "int32"
			},
			"stackTrace": {
			  "type": "array",
			  "items": {
				"$ref": "#/components/schemas/UniversalDashboard.Models.EndpointStackFrame"
			  },
			  "nullable": true
			},
			"children": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true,
			  "readOnly": true
			},
			"websocket": {
			  "type": "boolean"
			},
			"postProcessVariables": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "nullable": true
			},
			"file": {
			  "type": "string",
			  "nullable": true
			},
			"staticValue": {
			  "type": "string",
			  "nullable": true
			},
			"dashboardId": {
			  "type": "integer",
			  "format": "int64"
			},
			"javaScript": {
			  "type": "string",
			  "nullable": true
			},
			"hasCallback": {
			  "type": "boolean",
			  "readOnly": true
			}
		  },
		  "additionalProperties": false
		},
		"UniversalDashboard.Models.EndpointSchedule": {
		  "type": "object",
		  "properties": {
			"every": {
			  "type": "string",
			  "format": "date-span"
			},
			"cron": {
			  "type": "string",
			  "nullable": true
			},
			"repeat": {
			  "type": "integer",
			  "format": "int32"
			},
			"consecutive": {
			  "type": "boolean"
			}
		  },
		  "additionalProperties": false
		},
		"UniversalDashboard.Models.EndpointStackFrame": {
		  "type": "object",
		  "properties": {
			"endpointId": {
			  "type": "string",
			  "nullable": true
			},
			"line": {
			  "type": "integer",
			  "format": "int32"
			}
		  },
		  "additionalProperties": false
		},
		"UniversalDashboard.Models.MovingAverage": {
		  "type": "object",
		  "properties": {
			"isMature": {
			  "type": "boolean",
			  "readOnly": true
			}
		  },
		  "additionalProperties": false
		}
	  },
	  "securitySchemes": {
		"Bearer": {
		  "type": "apiKey",
		  "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
		  "name": "Authorization",
		  "in": "header"
		}
	  }
	},
	"security": [
	  {
		"Bearer": [ ]
	  }
	]
  }
  